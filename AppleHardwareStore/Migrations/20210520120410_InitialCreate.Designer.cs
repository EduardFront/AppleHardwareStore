// <auto-generated />
using AppleHardwareStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppleHardwareStore.Migrations
{
    [DbContext(typeof(AppleHardwareStoreDbContext))]
    [Migration("20210520120410_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppleHardwareStore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("client_address");

                    b.Property<string>("ClientCardNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("client_card_number");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("client_name");

                    b.Property<string>("ClientPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("client_phone");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int")
                        .HasColumnName("order_status_id");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float")
                        .HasColumnName("total_cost");

                    b.HasKey("Id")
                        .HasName("order_pk");

                    b.HasIndex("OrderStatusId")
                        .HasDatabaseName("idx_order_status_id");

                    b.ToTable("order");
                });

            modelBuilder.Entity("AppleHardwareStore.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("order_status_pk");

                    b.ToTable("order_status");
                });

            modelBuilder.Entity("AppleHardwareStore.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost")
                        .HasColumnType("float")
                        .HasColumnName("cost");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("Id")
                        .HasName("position_pk");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("idx_order_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("idx_product_id");

                    b.ToTable("position");
                });

            modelBuilder.Entity("AppleHardwareStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int")
                        .HasColumnName("product_type_id");

                    b.HasKey("Id")
                        .HasName("product_pk");

                    b.HasIndex("ProductTypeId")
                        .HasDatabaseName("idx_product_type_id");

                    b.ToTable("product");
                });

            modelBuilder.Entity("AppleHardwareStore.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("product_type_pk");

                    b.ToTable("product_type");
                });

            modelBuilder.Entity("AppleHardwareStore.Models.Order", b =>
                {
                    b.HasOne("AppleHardwareStore.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("AppleHardwareStore.Models.Position", b =>
                {
                    b.HasOne("AppleHardwareStore.Models.Order", "Order")
                        .WithMany("Positions")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppleHardwareStore.Models.Product", "Product")
                        .WithMany("Positions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AppleHardwareStore.Models.Product", b =>
                {
                    b.HasOne("AppleHardwareStore.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("AppleHardwareStore.Models.Order", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("AppleHardwareStore.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AppleHardwareStore.Models.Product", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("AppleHardwareStore.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
